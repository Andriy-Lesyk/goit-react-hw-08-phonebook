{"version":3,"file":"static/js/274.ef7a9780.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Forms/Forms.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","views/ContactsViews/ContactsViews.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuId } from 'uuid';\nimport { addContacts } from '../../redux/contacts/contactsOperations';\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default function Forms() {\n  const dispatch = useDispatch();\n  const contactsSelect = useSelector(state => state.contacts.entities);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const id = uuId();\n\n    const contCheck = contactsSelect.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    contCheck\n      ? alert(`${name} is olready in contacts`)\n      : dispatch(addContacts({ id, name, number }));\n    resetForm();\n  };\n  console.log(name);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h3\">\n            Phonebook\n          </Typography>\n          <Box component=\"form\" onSubmit={handleNameSubmit} noValidate>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              value={name}\n              autoComplete=\"name\"\n              autoFocus\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              label=\"Number\"\n              id=\"number\"\n              value={number}\n              autoComplete=\"number\"\n              onChange={handleChange}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { inputFilter } from '../../redux/store';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => dispatch(inputFilter(e.currentTarget.value));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Box>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Find contacts by name\"\n            name=\"email\"\n            autoFocus\n            onChange={changeFilter}\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\nmargin:0\n`;\nexport const Contac = styled.li`\nlist-style: none;\n`;\nexport const Btn = styled.button`\n  margin-left: 30px;\n  background-color: orange;\n  border-radius: 5px;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Contacts, Contac } from './Contacts.styles';\nimport {\n  deleteContacts,\n  fetchContacts,\n} from '../../redux/contacts/contactsOperations';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nfunction Contact() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contactsSelect = useSelector(state => state.contacts.entities);\n  const filterSelect = useSelector(state => state.filter);\n\n  let contacts =\n    filterSelect === ''\n      ? contactsSelect\n      : contactsSelect.filter(cont =>\n          cont.name.toLowerCase().includes(filterSelect.filter.toLowerCase())\n        );\n\n  return (\n    <div>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h3\">\n          Contacts\n        </Typography>\n        <Contacts>\n          {contacts.length > 0 &&\n            contacts.map(({ name, number, id }) => (\n              <Contac key={id}>\n                <Box\n                  sx={{\n                    marginTop: '18px',\n                    display: 'flex',\n                    flexDirection: 'raw',\n                    alignItems: 'center',\n                  }}\n                >\n                  <TextField value={name} />\n                  <TextField value={number} sx={{ marginLeft: '10px' }} />\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ marginLeft: '10px', width: '30px', height: '54px' }}\n                    onClick={async () => {\n                      await dispatch(deleteContacts(id));\n                      dispatch(fetchContacts());\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Contac>\n            ))}\n        </Contacts>\n      </Box>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport Form from '../../components/Forms/Forms';\nimport Filter from '../../components/Filter/Filter';\nimport Contact from '../../components/Contacts/Contacts';\nimport Box from '@mui/material/Box';\n\nfunction HomeViews() {\n  return (\n    <div>\n      <Box sx={{\n                  marginTop: 2,\n                  display: 'flex',\n                  flexDirection: 'raw',\n                  justifyContent: \"center\"\n                }}>\n        <Box>\n          <Form />\n          <Filter />\n        </Box>\n        <Contact />\n      </Box>\n    </div>\n  );\n}\n\nexport default HomeViews;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","theme","createTheme","Forms","dispatch","useDispatch","contactsSelect","useSelector","state","contacts","entities","useState","name","setName","number","setNumber","console","log","handleChange","target","value","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","e","preventDefault","id","uuId","find","contact","alert","addContacts","noValidate","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","Button","type","mt","mb","Filter","inputFilter","currentTarget","Contacts","styled","Contac","useEffect","fetchContacts","filterSelect","filter","cont","includes","map","marginLeft","width","height","onClick","deleteContacts","justifyContent"],"sourceRoot":""}